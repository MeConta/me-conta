version: '3.8'

services:
  # Database Service (postgres)
  db:
    image: postgres:latest
    user: postgres
    environment:
      POSTGRES_DB: 'me-conta'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - me-conta-data:/var/lib/postgresql/data
    networks:
      - backend

  # Migration Service
  migration:
    build:
      context: backend
      dockerfile: ./Dockerfile.migration
      target: migration
    depends_on:
      - db
    env_file:
      - backend/.env
      - backend/.env.local
    environment:
      NODE_ENV: docker
      DATABASE_URL: postgres://postgres:@db:5432/me-conta
    networks:
      - backend

  # App backend service
  api:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - db
    env_file:
      - backend/.env
      - backend/.env.local
    environment:
      NODE_ENV: docker
      DATABASE_URL: postgres://postgres:@db:5432/me-conta
    networks:
      - backend
      - frontend

  # App storybook service
  storybook:
    build:
      context: frontend
      dockerfile: ./Dockerfile.storybook
      target: storybook
    ports:
      - "6006:80"
    environment:
      PORT: 8080
    networks:
      - frontend

  # App frontend service
  front:
    build:
      context: frontend
      dockerfile: ./Dockerfile.web
      args:
        NODE_ENV: production
        API_URL: backend:3000
    ports:
      - "3005:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      API_URL: backend:3000
    networks:
      - frontend
volumes:
  me-conta-data:
networks:
  backend:
  frontend:
